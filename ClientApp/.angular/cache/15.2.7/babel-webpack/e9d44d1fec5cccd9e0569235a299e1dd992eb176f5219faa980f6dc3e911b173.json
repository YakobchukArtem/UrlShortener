{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"src/api-authorization/authorize.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction AddUrlComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.errorMessage);\n  }\n}\nexport class AddUrlComponent {\n  constructor(http, authorizeService, baseUrl) {\n    this.http = http;\n    this.authorizeService = authorizeService;\n    this.baseUrl = baseUrl;\n    this.newUrl = {\n      longForm: '',\n      createdBy: ''\n    };\n    this.errorMessage = '';\n  }\n  addUrl(event) {\n    event.preventDefault();\n    this.errorMessage = '';\n    this.authorizeService.getUser().subscribe(user => {\n      if (user) {\n        this.newUrl.createdBy = user.name || '';\n      } else {\n        console.error('User information not available.');\n      }\n      const urlData = {\n        longForm: this.newUrl.longForm,\n        createdBy: this.newUrl.createdBy\n      };\n      this.http.post(this.baseUrl + 'api/url', urlData).subscribe(response => {\n        console.log('URL added successfully:', response);\n        this.newUrl = {\n          longForm: '',\n          createdBy: this.newUrl.createdBy\n        };\n      }, error => {\n        console.error('Error adding URL:', error);\n        this.errorMessage = 'Error adding URL: ' + error.message;\n      });\n    });\n  }\n}\nAddUrlComponent.ɵfac = function AddUrlComponent_Factory(t) {\n  return new (t || AddUrlComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.AuthorizeService), i0.ɵɵdirectiveInject('BASE_URL'));\n};\nAddUrlComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddUrlComponent,\n  selectors: [[\"app-add-url\"]],\n  decls: 11,\n  vars: 2,\n  consts: [[3, \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"longForm\"], [\"type\", \"text\", \"id\", \"longForm\", \"name\", \"longForm\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [\"class\", \"alert alert-danger mt-3\", 4, \"ngIf\"], [1, \"alert\", \"alert-danger\", \"mt-3\"]],\n  template: function AddUrlComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n      i0.ɵɵtext(2, \"Add New URL\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function AddUrlComponent_Template_form_ngSubmit_3_listener($event) {\n        return ctx.addUrl($event);\n      });\n      i0.ɵɵelementStart(4, \"div\", 1)(5, \"label\", 2);\n      i0.ɵɵtext(6, \"Long URL:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function AddUrlComponent_Template_input_ngModelChange_7_listener($event) {\n        return ctx.newUrl.longForm = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"button\", 4);\n      i0.ɵɵtext(9, \"Add URL\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(10, AddUrlComponent_div_10_Template, 2, 1, \"div\", 5);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.newUrl.longForm);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n    }\n  },\n  dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;;;;;IASIA,8BAA0D;IAAAA,YAAkB;IAAAA,iBAAM;;;;IAAxBA,eAAkB;IAAlBA,yCAAkB;;;ACDhF,OAAM,MAAOC,eAAe;EAI1BC,YACUC,IAAgB,EAChBC,gBAAkC,EACdC,OAAe;IAFnC,SAAI,GAAJF,IAAI;IACJ,qBAAgB,GAAhBC,gBAAgB;IACI,YAAO,GAAPC,OAAO;IANrC,WAAM,GAAe;MAAEC,QAAQ,EAAE,EAAE;MAAEC,SAAS,EAAE;IAAE,CAAE;IACpD,iBAAY,GAAW,EAAE;EAMtB;EAEHC,MAAM,CAACC,KAAY;IACjBA,KAAK,CAACC,cAAc,EAAE;IACtB,IAAI,CAACC,YAAY,GAAG,EAAE;IAEtB,IAAI,CAACP,gBAAgB,CAACQ,OAAO,EAAE,CAACC,SAAS,CAACC,IAAI,IAAG;MAC/C,IAAIA,IAAI,EAAE;QACR,IAAI,CAACC,MAAM,CAACR,SAAS,GAAGO,IAAI,CAACE,IAAI,IAAI,EAAE;OACxC,MAAM;QACLC,OAAO,CAACC,KAAK,CAAC,iCAAiC,CAAC;;MAGlD,MAAMC,OAAO,GAAG;QACdb,QAAQ,EAAE,IAAI,CAACS,MAAM,CAACT,QAAQ;QAC9BC,SAAS,EAAE,IAAI,CAACQ,MAAM,CAACR;OACxB;MAED,IAAI,CAACJ,IAAI,CAACiB,IAAI,CAAM,IAAI,CAACf,OAAO,GAAG,SAAS,EAAEc,OAAO,CAAC,CACnDN,SAAS,CACRQ,QAAQ,IAAG;QACTJ,OAAO,CAACK,GAAG,CAAC,yBAAyB,EAAED,QAAQ,CAAC;QAChD,IAAI,CAACN,MAAM,GAAG;UAAET,QAAQ,EAAE,EAAE;UAAEC,SAAS,EAAE,IAAI,CAACQ,MAAM,CAACR;QAAS,CAAE;MAClE,CAAC,EACDW,KAAK,IAAG;QACND,OAAO,CAACC,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;QACzC,IAAI,CAACP,YAAY,GAAG,oBAAoB,GAAGO,KAAK,CAACK,OAAO;MAC1D,CAAC,CACF;IACL,CAAC,CAAC;EACJ;;AAtCWtB,eAAe;mBAAfA,eAAe,uGAOhB,UAAU;AAAA;AAPTA,eAAe;QAAfA,eAAe;EAAAuB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDR5B5B,2BAAK;MACGA,2BAAW;MAAAA,iBAAK;MACpBA,+BAAkC;MAA5BA;QAAA,OAAY6B,kBAAc;MAAA,EAAC;MAC7B7B,8BAAwB;MACEA,yBAAS;MAAAA,iBAAQ;MACvCA,gCAA6G;MAAvCA;QAAA;MAAA,EAA6B;MAAnGA,iBAA6G;MAEjHA,iCAA8C;MAAAA,uBAAO;MAAAA,iBAAS;MAElEA,kEAAkF;MACtFA,iBAAM;;;MAL4EA,eAA6B;MAA7BA,6CAA6B;MAIrGA,eAAkB;MAAlBA,uCAAkB","names":["i0","AddUrlComponent","constructor","http","authorizeService","baseUrl","longForm","createdBy","addUrl","event","preventDefault","errorMessage","getUser","subscribe","user","newUrl","name","console","error","urlData","post","response","log","message","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\Task for Inforce\\UrlShortener\\ClientApp\\src\\app\\add-url\\add-url.component.html","D:\\Task for Inforce\\UrlShortener\\ClientApp\\src\\app\\add-url\\add-url.component.ts"],"sourcesContent":["<div>\r\n    <h2>Add New URL</h2>\r\n    <form (ngSubmit)=\"addUrl($event)\">\r\n        <div class=\"form-group\">\r\n            <label for=\"longForm\">Long URL:</label>\r\n            <input type=\"text\" class=\"form-control\" id=\"longForm\" name=\"longForm\" [(ngModel)]=\"newUrl.longForm\" required>\r\n        </div>\r\n        <button type=\"submit\" class=\"btn btn-primary\">Add URL</button>\r\n    </form>\r\n    <div *ngIf=\"errorMessage\" class=\"alert alert-danger mt-3\">{{ errorMessage }}</div>\r\n</div>\r\n","import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AuthorizeService, IUser } from 'src/api-authorization/authorize.service';\r\n\r\n@Component({\r\n  selector: 'app-add-url',\r\n  templateUrl: './add-url.component.html'\r\n})\r\nexport class AddUrlComponent {\r\n  newUrl: UrlLinkDTO = { longForm: '', createdBy: '' };\r\n  errorMessage: string = '';\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private authorizeService: AuthorizeService,\r\n    @Inject('BASE_URL') private baseUrl: string\r\n  ) {}\r\n\r\n  addUrl(event: Event) {\r\n    event.preventDefault();\r\n    this.errorMessage = '';\r\n\r\n    this.authorizeService.getUser().subscribe(user => {\r\n      if (user) {\r\n        this.newUrl.createdBy = user.name || '';\r\n      } else {\r\n        console.error('User information not available.');\r\n      }\r\n\r\n      const urlData = {\r\n        longForm: this.newUrl.longForm,\r\n        createdBy: this.newUrl.createdBy\r\n      };\r\n\r\n      this.http.post<any>(this.baseUrl + 'api/url', urlData)\r\n        .subscribe(\r\n          response => {\r\n            console.log('URL added successfully:', response);\r\n            this.newUrl = { longForm: '', createdBy: this.newUrl.createdBy };\r\n          },\r\n          error => {\r\n            console.error('Error adding URL:', error);\r\n            this.errorMessage = 'Error adding URL: ' + error.message;\r\n          }\r\n        );\r\n    });\r\n  }\r\n}\r\n\r\ninterface UrlLinkDTO {\r\n  longForm: string;\r\n  createdBy: string;\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}