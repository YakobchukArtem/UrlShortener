{"ast":null,"code":"import { __decorate, __param } from \"tslib\";\nimport { Component, Inject } from '@angular/core';\nlet UrlTableComponent = class UrlTableComponent {\n  constructor(http, authorizeGuard, baseUrl) {\n    this.http = http;\n    this.authorizeGuard = authorizeGuard;\n    this.baseUrl = baseUrl;\n    this.urls = [];\n    this.fetchUrls();\n  }\n  fetchUrls() {\n    this.http.get(this.baseUrl + 'api/url').subscribe(result => {\n      this.urls = result;\n    }, error => console.error(error));\n  }\n  openUrl(url) {\n    console.log('Open URL:', url);\n  }\n  deleteUrl(event, id) {\n    event.stopPropagation();\n    // Застосовуємо AuthorizeGuard перед викликом HTTP-запиту\n    if (this.authorizeGuard.canActivate()) {\n      this.http.delete(this.baseUrl + 'api/url/' + id).subscribe(() => {\n        console.log('URL with ID ' + id + ' deleted successfully');\n        this.fetchUrls();\n      }, error => {\n        console.error('Error deleting URL:', error);\n      });\n    } else {\n      console.log('Unauthorized to delete URL');\n      // Обробка випадку, коли користувач не має доступу\n    }\n  }\n};\n\nUrlTableComponent = __decorate([Component({\n  selector: 'app-url-table',\n  templateUrl: './url-table.component.html'\n}), __param(2, Inject('BASE_URL'))], UrlTableComponent);\nexport { UrlTableComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,QAAQ,eAAe;AAQ1C,IAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAG5BC,YACUC,IAAgB,EAChBC,cAA8B,EACVC,OAAe;IAFnC,SAAI,GAAJF,IAAI;IACJ,mBAAc,GAAdC,cAAc;IACM,YAAO,GAAPC,OAAO;IAL9B,SAAI,GAAc,EAAE;IAOzB,IAAI,CAACC,SAAS,EAAE;EAClB;EAEAA,SAAS;IACP,IAAI,CAACH,IAAI,CAACI,GAAG,CAAY,IAAI,CAACF,OAAO,GAAG,SAAS,CAAC,CAACG,SAAS,CAACC,MAAM,IAAG;MACpE,IAAI,CAACC,IAAI,GAAGD,MAAM;IACpB,CAAC,EAAEE,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EACnC;EAEAE,OAAO,CAACC,GAAY;IAClBF,OAAO,CAACG,GAAG,CAAC,WAAW,EAAED,GAAG,CAAC;EAC/B;EAEAE,SAAS,CAACC,KAAiB,EAAEC,EAAU;IACrCD,KAAK,CAACE,eAAe,EAAE;IAEvB;IACA,IAAI,IAAI,CAACf,cAAc,CAACgB,WAAW,EAAE,EAAE;MACrC,IAAI,CAACjB,IAAI,CAACkB,MAAM,CAAC,IAAI,CAAChB,OAAO,GAAG,UAAU,GAAGa,EAAE,CAAC,CAACV,SAAS,CAAC,MAAK;QAC9DI,OAAO,CAACG,GAAG,CAAC,cAAc,GAAGG,EAAE,GAAG,uBAAuB,CAAC;QAC1D,IAAI,CAACZ,SAAS,EAAE;MAClB,CAAC,EAAEK,KAAK,IAAG;QACTC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC7C,CAAC,CAAC;KACH,MAAM;MACLC,OAAO,CAACG,GAAG,CAAC,4BAA4B,CAAC;MACzC;;EAEJ;CACD;;AArCYd,iBAAiB,eAJ7BF,SAAS,CAAC;EACTuB,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE;CACd,CAAC,EAOGC,iBAAM,CAAC,UAAU,CAAC,IANVvB,iBAAiB,CAqC7B;SArCYA,iBAAiB","names":["Component","Inject","UrlTableComponent","constructor","http","authorizeGuard","baseUrl","fetchUrls","get","subscribe","result","urls","error","console","openUrl","url","log","deleteUrl","event","id","stopPropagation","canActivate","delete","selector","templateUrl","__param"],"sourceRoot":"","sources":["D:\\Task for Inforce\\UrlShortener\\ClientApp\\src\\app\\url-table\\url-table.component.ts"],"sourcesContent":["import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AuthorizeGuard } from 'src/api-authorization/authorize.guard';\r\n\r\n@Component({\r\n  selector: 'app-url-table',\r\n  templateUrl: './url-table.component.html'\r\n})\r\nexport class UrlTableComponent {\r\n  public urls: UrlLink[] = [];\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private authorizeGuard: AuthorizeGuard,\r\n    @Inject('BASE_URL') private baseUrl: string\r\n  ) {\r\n    this.fetchUrls();\r\n  }\r\n\r\n  fetchUrls() {\r\n    this.http.get<UrlLink[]>(this.baseUrl + 'api/url').subscribe(result => {\r\n      this.urls = result;\r\n    }, error => console.error(error));\r\n  }\r\n\r\n  openUrl(url: UrlLink) {\r\n    console.log('Open URL:', url);\r\n  }\r\n\r\n  deleteUrl(event: MouseEvent, id: string) {\r\n    event.stopPropagation();\r\n\r\n    // Застосовуємо AuthorizeGuard перед викликом HTTP-запиту\r\n    if (this.authorizeGuard.canActivate()) {\r\n      this.http.delete(this.baseUrl + 'api/url/' + id).subscribe(() => {\r\n        console.log('URL with ID ' + id + ' deleted successfully');\r\n        this.fetchUrls();\r\n      }, error => {\r\n        console.error('Error deleting URL:', error);\r\n      });\r\n    } else {\r\n      console.log('Unauthorized to delete URL');\r\n      // Обробка випадку, коли користувач не має доступу\r\n    }\r\n  }\r\n}\r\n\r\ninterface UrlLink {\r\n  id: string;\r\n  longForm: string;\r\n  shortForm: string;\r\n  createdBy: string;\r\n  createdAt: Date;\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}