{"ast":null,"code":"import { __decorate, __param } from \"tslib\";\nimport { Component, Inject } from '@angular/core';\nlet UrlTableComponent = class UrlTableComponent {\n  constructor(http, baseUrl) {\n    this.http = http;\n    this.baseUrl = baseUrl;\n    this.urls = [];\n    this.loadUrls();\n  }\n  loadUrls() {\n    this.http.get(this.baseUrl + 'api/Url').subscribe(result => {\n      this.urls = result;\n    }, error => console.error(error));\n  }\n};\nUrlTableComponent = __decorate([Component({\n  selector: 'app-url-table',\n  templateUrl: './url-table.component.html'\n}), __param(1, Inject('BASE_URL'))], UrlTableComponent);\nexport { UrlTableComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,QAAQ,eAAe;AAO1C,IAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAG5BC,YAAoBC,IAAgB,EAA8BC,OAAe;IAA7D,SAAI,GAAJD,IAAI;IAA0C,YAAO,GAAPC,OAAO;IAFlE,SAAI,GAAc,EAAE;IAGzB,IAAI,CAACC,QAAQ,EAAE;EACjB;EAEAA,QAAQ;IACN,IAAI,CAACF,IAAI,CAACG,GAAG,CAAY,IAAI,CAACF,OAAO,GAAG,SAAS,CAAC,CAACG,SAAS,CAACC,MAAM,IAAG;MACpE,IAAI,CAACC,IAAI,GAAGD,MAAM;IACpB,CAAC,EAAEE,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EACnC;CACD;AAZYT,iBAAiB,eAJ7BF,SAAS,CAAC;EACTa,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE;CACd,CAAC,EAIuCC,iBAAM,CAAC,UAAU,CAAC,IAH9Cb,iBAAiB,CAY7B;SAZYA,iBAAiB","names":["Component","Inject","UrlTableComponent","constructor","http","baseUrl","loadUrls","get","subscribe","result","urls","error","console","selector","templateUrl","__param"],"sourceRoot":"","sources":["D:\\Task for Inforce\\UrlShortener\\ClientApp\\src\\app\\url-table\\url-table.component.ts"],"sourcesContent":["import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-url-table',\r\n  templateUrl: './url-table.component.html'\r\n})\r\nexport class UrlTableComponent {\r\n  public urls: UrlLink[] = [];\r\n\r\n  constructor(private http: HttpClient, @Inject('BASE_URL') private baseUrl: string) {\r\n    this.loadUrls();\r\n  }\r\n\r\n  loadUrls() {\r\n    this.http.get<UrlLink[]>(this.baseUrl + 'api/Url').subscribe(result => {\r\n      this.urls = result;\r\n    }, error => console.error(error));\r\n  }\r\n}\r\n\r\ninterface UrlLink {\r\n  id: string;\r\n  longForm: string;\r\n  shortForm: string;\r\n  createdBy: string;\r\n  createdAt: Date;\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}