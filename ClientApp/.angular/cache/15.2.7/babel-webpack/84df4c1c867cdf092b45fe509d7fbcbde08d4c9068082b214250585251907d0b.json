{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nfunction UrlTableComponent_tr_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const url_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(url_r1.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(url_r1.longForm);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(url_r1.shortForm);\n  }\n}\nexport class UrlTableComponent {\n  constructor(http, baseUrl) {\n    this.urls = [];\n    http.get(baseUrl + 'url').subscribe(result => {\n      this.urls = result;\n    }, error => console.error(error));\n  }\n}\nUrlTableComponent.ɵfac = function UrlTableComponent_Factory(t) {\n  return new (t || UrlTableComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject('BASE_URL'));\n};\nUrlTableComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UrlTableComponent,\n  selectors: [[\"app-url-table\"]],\n  decls: 11,\n  vars: 1,\n  consts: [[1, \"table\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function UrlTableComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"table\", 0)(1, \"thead\")(2, \"tr\")(3, \"th\");\n      i0.ɵɵtext(4, \"ID\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"th\");\n      i0.ɵɵtext(6, \"Long Form\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"th\");\n      i0.ɵɵtext(8, \"Short Form\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(9, \"tbody\");\n      i0.ɵɵtemplate(10, UrlTableComponent_tr_10_Template, 7, 3, \"tr\", 1);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngForOf\", ctx.urls);\n    }\n  },\n  dependencies: [i2.NgForOf],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;;;IAUYA,0BAA6B;IACrBA,YAAY;IAAAA,iBAAK;IACrBA,0BAAI;IAAAA,YAAkB;IAAAA,iBAAK;IAC3BA,0BAAI;IAAAA,YAAmB;IAAAA,iBAAK;;;;IAFxBA,eAAY;IAAZA,+BAAY;IACZA,eAAkB;IAAlBA,qCAAkB;IAClBA,eAAmB;IAAnBA,sCAAmB;;;ACNvC,OAAM,MAAOC,iBAAiB;EAG5BC,YAAaC,IAAgB,EAAuBC,OAAe;IAF5D,SAAI,GAAc,EAAE;IAGzBD,IAAI,CAACE,GAAG,CAAYD,OAAO,GAAG,KAAK,CAAC,CAACE,SAAS,CAACC,MAAM,IAAG;MACpD,IAAI,CAACC,IAAI,GAAGD,MAAM;IACpB,CAAC,EAAEE,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EACrC;;AAPWR,iBAAiB;mBAAjBA,iBAAiB,4DAGW,UAAU;AAAA;AAHtCA,iBAAiB;QAAjBA,iBAAiB;EAAAU;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDN1Bf,gCAAqB;MAGLA,kBAAE;MAAAA,iBAAK;MACXA,0BAAI;MAAAA,yBAAS;MAAAA,iBAAK;MAClBA,0BAAI;MAAAA,0BAAU;MAAAA,iBAAK;MAG3BA,6BAAO;MACHA,kEAIK;MACTA,iBAAQ;;;MALgBA,gBAAO;MAAPA,kCAAO","names":["i0","UrlTableComponent","constructor","http","baseUrl","get","subscribe","result","urls","error","console","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\Task for Inforce\\UrlShortener\\ClientApp\\src\\app\\url-table\\url-table.component.html","D:\\Task for Inforce\\UrlShortener\\ClientApp\\src\\app\\url-table\\url-table.component.ts"],"sourcesContent":["\r\n    <table class=\"table\">\r\n        <thead>\r\n            <tr>\r\n                <th>ID</th>\r\n                <th>Long Form</th>\r\n                <th>Short Form</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let url of urls\">\r\n                <td>{{ url.id }}</td>\r\n                <td>{{ url.longForm }}</td>\r\n                <td>{{ url.shortForm }}</td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n\r\n","import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-url-table',\r\n  templateUrl: './url-table.component.html'\r\n})\r\nexport class UrlTableComponent {\r\n  public urls: UrlLink[] = [];\r\n\r\n  constructor( http: HttpClient, @Inject('BASE_URL')  baseUrl: string) {\r\n    http.get<UrlLink[]>(baseUrl + 'url').subscribe(result => {\r\n        this.urls = result;\r\n      }, error => console.error(error));\r\n  }\r\n\r\n}\r\n\r\ninterface UrlLink {\r\n  id: string;\r\n  longForm: string;\r\n  shortForm: string;\r\n  createdBy: string;\r\n  createdAt: Date;\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}